//给你一根长度为n的绳子，请把绳子剪成整数长的m段（m、n都是整数，n>1并且m>1，m<=n），
//每段绳子的长度记为k[1],...,k[m]。请问k[1]x...xk[m]可能的最大乘积是多少？
//例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。

import java.util.*;

public class Solution {
    public int cutRope(int target) {
        if(target == 2) {
            return 1;
        }
        if(target == 3) {
            return 2;
        }
        int count = 0;
        if(target % 3 == 0) {
            count = 1;
            return (int)Math.pow(3,target/3)*count;
        }else if(target % 3 == 1) {
            return (int)Math.pow(3,target/3 -1)*4;
        }else if(target % 3 == 2) {
            count = target % 3;
        }
        return (int)Math.pow(3,target/3)*count;
    }
}