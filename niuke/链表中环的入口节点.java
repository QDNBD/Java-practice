/*
 public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}
*/

//设置快慢指针，都从链表头出发，快指针每次走两步，慢指针一次走一步，
//假如有环，一定相遇于环中某点。
//接着让两个指针分别从相遇点和链表头出发，两者都改为每次走一步，最终相遇于环入口
public class Solution {

    public ListNode EntryNodeOfLoop(ListNode pHead) {
        ListNode fast = pHead;
        ListNode low = pHead;
        while(fast != null && fast.next != null) {
            fast = fast.next.next;
            low = low.next;
            if(fast == low) {
                break;
            }
        }
        if(fast == null || fast.next == null) {
            return null;
        }
        low = pHead;
        while(fast != low) {
            fast = fast.next;
            low = low.next;
        }
        return low;
    }
}